geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5, aes(group=green_rating))
# facet_grid(~green_rating, scales = "free_x", space = "free_x")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), group=green_rating, fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5, aes(), hjust)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), group=green_rating, fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5)
# facet_grid(~green_rating, scales = "free_x", space = "free_x")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), group=green_rating, fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5) +
facet_grid(~green_rating, scales = "free_x", space = "free_x")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), group=green_rating, fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5) +
facet_grid(~green_rating, scales = "free_x", space = "free_x") +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), group=green_rating, fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), hjust=0.4) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(nudge_y = 0.5, nudge_x = 0.5)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text()
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position='dodge')
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge())
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.5))
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9))
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9), nudge_y = 0.5)
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9, height=0.5))
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9))
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9)) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge()) +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9), hjust=0.5) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
?position_dodge
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9)) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.5) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.4) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.35) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent))
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00", '#987H45')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00", '#E69F08')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#4682B4", "#48D1CC", '#FFA500')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#4682B4", "#48D1CC", '#FFA500')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Class")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#4682B4", "#48D1CC", '#B22222')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Class")
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
greenbuildings = read.csv('greenbuildings.csv')
gb1 = mutate(greenbuildings,
rent_diff_cluster = ((Rent / cluster_rent ) - 1))
gb1$green_rating = ifelse(gb1$green_rating==1, "Green", "Non-Green")
gb1$class_type = ifelse(gb1$class_type==0, "Class C", ifelse(gb1$class_type==1, "Class B", "Class A"))
rm(list=ls())
library(mosaic)
library(tidyverse)
greenbuildings = read.csv('greenbuildings.csv')
gb1 = mutate(greenbuildings,
rent_diff_cluster = ((Rent / cluster_rent ) - 1))
gb1$green_rating = ifelse(gb1$green_rating==1, "Green", "Non-Green")
gb1$class_type = ifelse(gb1$class_type==0, "Class C", ifelse(gb1$class_type==1, "Class B", "Class A"))
rm(list=ls())
library(mosaic)
library(tidyverse)
greenbuildings = read.csv('greenbuildings.csv')
gb1 = mutate(greenbuildings,
rent_diff_cluster = ((Rent / cluster_rent ) - 1))
gb1$green_rating = ifelse(gb1$green_rating==1, "Green", "Non-Green")
gb1$class_type = gb1$class_a*2 + gb1$class_b
gb1$class_type = ifelse(gb1$class_type==0, "Class C", ifelse(gb1$class_type==1, "Class B", "Class A"))
gb1$net = ifelse(gb1$net==1,"Utilities Paid","Utilities Not Paid")
ggplot(data = gb1, mapping = aes(x=gb1$class_type, y=..prop.., fill=gb1$green_rating, group=gb1$green_rating)) +
geom_bar(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
labs(title="Bar plot",
subtitle="Class by Green Rating",
caption="Source: greenbuilding data set in R",
x="Class", y="Proportion",
fill="Green Rating")
gb1 %>%
group_by(class_type) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(class_type))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#4682B4", "#48D1CC", '#B22222')) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Class")
gb1 %>%
group_by(class_type, green_rating) %>%
summarise(AverageRent = mean(Rent)) %>%
ggplot(aes(factor(class_type), AverageRent, label=round(AverageRent, 2), fill=factor(green_rating))) +
geom_col(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
geom_text(position=position_dodge(width = 0.9),vjust = -0.3) +
labs(title="Bar plot",
subtitle="Mean Rent by Class",
caption="Source: greenbuilding data set in R",
x="Class", y="Mean Rent (dollars)", fill="Green Rating")
knitr::opts_chunk$set(echo = TRUE)
library(arules)
groceries <- read.transactions("groceries.txt", sep = ",")
summary(groceries)
groceries <- read.transactions("groceries.txt", sep = "/")
summary(groceries)
summary(groceries)
groceries <- read.transactions("groceries.txt", sep = "\")
summary(groceries)
groceries <- read.transactions("groceries.txt", sep = "/")
summary(groceries)
summary(groceries)
groceries = read.transactions("groceries.txt", sep = "\n")
summary(groceries)
summary(groceries)
groceries = read.transactions("groceries.txt", sep = ",")
summary(groceries)
groceries = read.transactions("groceries.txt", sep = ",")
summary(groceries)
summary(groceries)
source('~/GitHub/STA380/R/playlists.R', echo=TRUE)
inspect(groceries[1:5])
groceryrules = apriori(groceries,
parameter=list(support=.005, confidence=.1, maxlen=5))
inspect(groceryrules)
inspect(subset(groceryrules, subset=lift > 5))
inspect(subset(groceryrules, subset=lift > 5))
inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
inspect(subset(groceryrules, subset=lift > 5))
inspect(subset(groceryrules, subset=lift > 5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
# inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
inspect(subset(groceryrules, subset=confidence > 0.6))
# inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 10 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 5 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.5))
groceryrules = apriori(groceries,
parameter=list(support=.005, confidence=.1, maxlen=2))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.5))
groceryrules = apriori(groceries,
parameter=list(support=.005, confidence=.1, maxlen=8))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.5))
groceryrules = apriori(groceries,
parameter=list(support=.005, confidence=.1, maxlen=5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.5))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.75))
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(subset(groceryrules, subset=lift > 2 & confidence > 0.6))
sub_rules <- association.rules[quality(association.rules)$confidence>0.4]
sub_rules <- groceryrules[quality(groceryrules)$confidence>0.4]
top10_sub_rules <- head(sub_rules, n=10, by = "lift")
plot(top10_sub_rules, method = "graph", engine = "htmlwidget")
sub_rules <- groceryrules[quality(groceryrules)$confidence>0.6]
top10_sub_rules <- head(sub_rules, n=10, by = "lift")
plot(top10_sub_rules, method = "graph", engine = "htmlwidget")
inspect(sort(groceryrules, by = "lift")[1:5])
sub_rules <- groceryrules[quality(groceryrules)$confidence>0.6]
top10_sub_rules <- head(sub_rules, n=10, by = "lift")
plot(top10_sub_rules, method = "graph", engine = "htmlwidget")
plot(sort(groceryrules, by = "lift")[1:5])
plot(sort(groceryrules, by = "lift")[1:5], method = "graph", engine = "htmlwidget")
sub_rules <- groceryrules[quality(groceryrules)$confidence>0.1]
top10_sub_rules <- head(sub_rules, n=10, by = "lift")
plot(top10_sub_rules, method = "graph", engine = "htmlwidget")
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(sort(subset(groceryrules, subset=lift > 2 & confidence > 0.1), by = "lift")[1:10])
plot(sort(groceryrules, by = "lift")[1:15], method = "graph", engine = "htmlwidget")
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(sort(subset(groceryrules, subset=lift > 2 & confidence > 0.1), by = "lift")[1:15])
# inspect(subset(groceryrules, subset=confidence > 0.6))
inspect(sort(subset(groceryrules, subset=lift > 2 & confidence > 0.1), by = "lift")[1:10])
sub_rules <- groceryrules[quality(groceryrules)$confidence>0.1]
top10_sub_rules <- head(sub_rules, n=10, by = "lift")
plot(top10_sub_rules, method = "graph", engine = "htmlwidget")
plot(sort(groceryrules, by = "lift")[1:10], method = "graph", engine = "htmlwidget")
read.transactions?
?read.transactions
rm(list=ls())
library(mosaic)
library(tidyverse)
greenbuildings = read.csv('greenbuildings.csv')
gb1 = mutate(greenbuildings,
rent_diff_cluster = ((Rent / cluster_rent ) - 1))
gb1$green_rating = ifelse(gb1$green_rating==1, "Green", "Non-Green")
gb1$class_type = gb1$class_a*2 + gb1$class_b
gb1$class_type = ifelse(gb1$class_type==0, "Class C", ifelse(gb1$class_type==1, "Class B", "Class A"))
gb1$net = ifelse(gb1$net==1,"Utilities Paid","Utilities Not Paid")
ggplot(data = gb1, mapping = aes(x=gb1$class_type, y=..prop.., fill=gb1$green_rating, group=gb1$green_rating)) +
geom_bar(position = position_dodge(), color='black') +
scale_fill_manual(values=c("#32CD32", "#E69F00")) +
labs(title="Bar plot",
subtitle="Class by Green Rating",
caption="Source: greenbuilding data set in R",
x="Class", y="Proportion",
fill="Green Rating")
rm(list = ls())
market = read.csv("social_marketing.csv", row.names=1)
library(tidyr)
library(mosaic)
library(dplyr)
library(reshape2)
library(ggplot2)
market <- cbind(market[,2:4],market[6:36])
market_scale = market
cormat <- round(cor(market), 2)
melted_cormat <- melt(cormat)
#market_scale = sweep(market, MARGIN = 1, FUN = '/', STATS = rowSums(market[,]))
market_scale = market/rowSums(market)
market_scale = scale(market_scale, center = TRUE, scale = FALSE)
pc3 = prcomp(market_scale, scale=FALSE, rank=3)
#plot(pc5)
loadings = pc3$rotation
scores = pc3$x
#head(market_scale)
pairs(scores)
library(tidyverse)
library(arules)
library(arulesViz)
library(plyr) #splitting, applying and combining data
library(ggplot2)
library(knitr)
library(lubridate)
groceries = as.matrix(read.table("groceries.txt",
header=FALSE,
sep = "/"))
#change colname
colnames(groceries) <- c("items")
summary(groceries)
#create formate needed for basket analysis
write.csv(groceries, "C:/Users/geogh/Dropbox/1. UT/3. Predictive Modelling/Part 2 Project/market_basket_transactions.csv", quote=FALSE, row.names=FALSE)
#create formate needed for basket analysis
write.csv(groceries, "market_basket_transactions.csv", quote=FALSE, row.names=FALSE)
#load in csv to analyze using read.transactions --> DON"T WORRY ABOUT ERROR MESSAGES
groc_tr <- read.transactions("market_basket_transactions.csv", format = "basket", sep = ",")
summary(groc_tr)
##This shows 13,633 transactions
#178 items (columns)
#density tells percentage of non-zero cells in the sparse matrix(most elements are zero). It is the total number of items that are purchases divided by the possible number of items in that matrix
#most frequent items are whole milk, other vegetables, buns, rolls and soda
#Numbers belwo show counts of baskets, 3,413 baskets have 1 item, 2,893 basekets have 2 items etc.
groceries = read.transactions("groceries.txt", sep = ",")
summary(groceries)
summary(groceries)
groceries = as.matrix(read.table("groceries.txt",
header=FALSE,
sep = ","))
groceries = as.matrix(read.table("groceries.txt",
header=FALSE,
sep = "\n"))
#change colname
colnames(groceries) <- c("items")
summary(groceries)
#create formate needed for basket analysis
write.csv(groceries, "market_basket_transactions.csv", quote=FALSE, row.names=FALSE)
#load in csv to analyze using read.transactions --> DON"T WORRY ABOUT ERROR MESSAGES
groc_tr <- read.transactions("market_basket_transactions.csv", format = "basket", sep = ",")
summary(groc_tr)
##This shows 13,633 transactions
#178 items (columns)
#density tells percentage of non-zero cells in the sparse matrix(most elements are zero). It is the total number of items that are purchases divided by the possible number of items in that matrix
#most frequent items are whole milk, other vegetables, buns, rolls and soda
#Numbers belwo show counts of baskets, 3,413 baskets have 1 item, 2,893 basekets have 2 items etc.
#top 10 rules
sub_rules <- association.rules[quality(association.rules)$confidence>0.4]
library(tidyverse)
library(arules)
library(arulesViz)
library(plyr) #splitting, applying and combining data
library(ggplot2)
library(knitr)
library(lubridate)
groceries = as.matrix(read.table("groceries.txt",
header=FALSE,
sep = "/"))
#change colname
colnames(groceries) <- c("items")
summary(groceries)
#create formate needed for basket analysis
write.csv(groceries, "C:/Users/geogh/Dropbox/1. UT/3. Predictive Modelling/Part 2 Project/market_basket_transactions.csv", quote=FALSE, row.names=FALSE)
